/**
 * This script automates the extraction and downloading of all files from multiple pages on the AlphaFold server.
 * It performs the following steps:
 * 1. (optional) Changes the number of items displayed per page to the maximum available option (100).
 * 2. Simulates clicks on all buttons to reveal download links.
 * 3. Extracts the download links from the current page.
 * 4. Clicks the "Next" button to navigate through all pages, repeating the extraction process.
 * 5. Logs all download links to the console.
 * 6. Opens each download link in a new tab to trigger the downloads.
 *
 * Usage Instructions:
 * 1. Open your browser (Chrome, Firefox, etc.) and navigate to the AlphaFold server page where the download links are listed, allow pop-ups for the site.
 * 2. Open the Developer Tools: Press `F12` or right-click on the webpage and select "Inspect".
 * 3. Navigate to the "Console" tab within the Developer Tools.
 * 4. If pasting the code for the first time, you may see a "Do you allow pasting?" warning. Type "allow pasting" to enable pasting.
 * 5. Copy and paste the entire script below into the Console tab.
 * 6. Press `Enter` to execute the script.
 * 7. The script will automatically:
 *    - Change the items per page to 100.
 *    - Click buttons to reveal download links.
 *    - Extract download links from all pages.
 *    - Open each download link in a new tab to trigger the downloads.
 *
 * Note: Depending on the number of files, a large number of tabs may open.
 */
 
// Function to change the items per page to the maximum available option (100)
function changeItemsPerPage() {
    // Open the dropdown menu
    const dropdownTrigger = document.querySelector('mat-select[aria-labelledby="mat-select-value-3 mat-paginator-page-size-label-0"]');
    dropdownTrigger.click();

    // Wait for the dropdown options to appear
    setTimeout(() => {
        // Find the option to select 100 items per page
        const options = document.querySelectorAll('mat-option');
        options.forEach(option => {
            if (option.innerText.trim() === '100') {
                option.click();
            }
        });
    }, 1); // Adjust the timeout as necessary
}

// Execute the function
<!-- changeItemsPerPage(); -->

let allDownloadLinks = [];

// Function to click all buttons to reveal download links
function clickAllButtons() {
    const buttons = document.querySelectorAll('button[aria-haspopup="menu"]');
    buttons.forEach(button => button.click());
}

// Function to extract download links from the current page
function extractDownloadLinks() {
    return new Promise((resolve) => {
        setTimeout(() => {
            const anchors = document.querySelectorAll('a');
            let downloadLinks = [];
            anchors.forEach(anchor => {
                if (anchor.hasAttribute('download')) {
                    let href = anchor.getAttribute('href');
                    let fullUrl = 'https://alphafoldserver.com' + (href.startsWith('/') ? '' : '/') + href;
                    downloadLinks.push(fullUrl);
                }
            });
            resolve(downloadLinks);
        }, 2000); // Adjust the timeout as necessary
    });
}

// Function to click the "Next" button and wait for the new page to load
function clickNextButtonAndWait() {
    return new Promise((resolve) => {
        const nextButton = document.querySelector('button.mat-mdc-paginator-navigation-next');
        if (nextButton && !nextButton.disabled) {
            nextButton.click();
            setTimeout(() => {
                resolve(true);
            }, 2000); // Adjust the timeout as necessary to wait for the new page to load
        } else {
            resolve(false);
        }
    });
}

// Function to download all extracted links
function downloadAllLinks(links) {
    links.forEach(link => {
        window.open(link, '_blank');
    });
}

// Main function to extract links from all pages
async function extractLinksFromAllPages() {
    let hasNextPage = true;

    while (hasNextPage) {
        clickAllButtons();
        const downloadLinks = await extractDownloadLinks();
        allDownloadLinks = allDownloadLinks.concat(downloadLinks);
        // hasNextPage = await clickNextButtonAndWait();
        break; // remove this
    }

    // Log all download links to the console
    console.log(allDownloadLinks.join('\n'));

    // Trigger the download of all extracted links
    downloadAllLinks(allDownloadLinks);
}

// Execute the main function
extractLinksFromAllPages();

